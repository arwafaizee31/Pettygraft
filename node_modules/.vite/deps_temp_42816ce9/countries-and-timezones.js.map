{
  "version": 3,
  "sources": ["../../countries-and-timezones/src/build-country.js", "../../countries-and-timezones/src/build-timezone.js", "../../countries-and-timezones/src/index.js"],
  "sourcesContent": ["let timezonesMap;\n\nexport default function buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data)[id] || {};\n\n  return {\n    id,\n    name,\n    timezones: tzMap.current || [],\n    allTimezones: tzMap.all || [],\n  };\n}\n\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n}\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const { c, a } = tz;\n    const aliasTz = data.timezones[a] || {};\n    const countries = c || aliasTz.c;\n\n    if (!countries) return result;\n\n    countries.forEach((country) => {\n      if (!result[country]) Object.assign(result, { [country]: { current: [], all: [] } });\n      if (tz.r === undefined) result[country].current.push(id);\n      result[country].all.push(id);\n    });\n\n    return result;\n  }, {});\n}\n", "export default function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const { a: aliasOf = null } = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name],\n  };\n\n  const countries = tz.c || [];\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  const result = {\n    name,\n    countries,\n    utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf,\n  };\n  if (timezone.r) result.deprecated = true;\n  return result;\n}\n\nfunction getOffsetStr(offset) {\n  const hours = Math.floor(Math.abs(offset) / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;\n}\n\nfunction getNumStr(input) {\n  const num = Math.abs(input);\n  const prefix = num < 10 ? '0' : '';\n  return `${prefix}${num}`;\n}\n", "import data from './data.json';\nimport buildCountry from './build-country';\nimport buildTimezone from './build-timezone';\n\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedTimezones = 0;\n\nexport function getAllCountries(options = {}) {\n  return Object.keys(data.countries).reduce((prev, id) => {\n    return Object.assign(prev, { [id]: getCountry(id, options) });\n  }, {});\n}\n\nexport function getAllTimezones(options = {}) {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return deliverTimezones(timezones, options);\n}\n\nexport function getCountry(id, options = {}) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return deliverCountry(countries[id], options);\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n}\n\nexport function getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nexport function getCountriesForTimezone(tzName, options = {}) {\n  const timezone = getTimezone(tzName) || {};\n  const values = timezone.countries || [];\n  return values.map((c) => getCountry(c, options));\n}\n\nexport function getCountryForTimezone(tzName, options = {}) {\n  const [main] = getCountriesForTimezone(tzName, options);\n  return main || null;\n}\n\nexport function getTimezonesForCountry(countryId, options = {}) {\n  const country = getCountry(countryId, options);\n  if (!country) return null;\n  const values = country.timezones || [];\n  return values.map(getTimezone);\n}\n\nfunction deliverTimezones(tzs, options) {\n  const { deprecated } = options || {};\n  if (deprecated === true) return tzs;\n  return Object.keys(tzs).reduce((prev, key) => {\n    if (!tzs[key].deprecated) Object.assign(prev, { [key]: tzs[key] });\n    return prev;\n  }, {});\n}\n\nfunction deliverCountry(country, options) {\n  if (!country) return null;\n  const { deprecated } = options || {};\n  const { allTimezones, ...other } = country;\n  const tz = deprecated ? country.allTimezones : country.timezones;\n  return { ...other, timezones: tz };\n}\n\nexport default {\n  getCountry,\n  getTimezone,\n  getAllCountries,\n  getAllTimezones,\n  getTimezonesForCountry,\n  getCountriesForTimezone,\n  getCountryForTimezone,\n};\n"],
  "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",
  "names": ["timezonesMap", "buildCountry", "data", "id", "name", "countries", "tzMap", "getTimezonesMap", "timezones", "current", "allTimezones", "all", "buildTimezonesMap", "Object", "keys", "reduce", "result", "tz", "c", "a", "aliasTz", "forEach", "country", "assign", "_defineProperty", "r", "undefined", "push", "buildTimezone", "timezone", "_timezone$a", "aliasOf", "_objectSpread", "utcOffset", "u", "dstOffset", "Number", "isInteger", "d", "utcOffsetStr", "getOffsetStr", "dstOffsetStr", "deprecated", "offset", "hours", "Math", "floor", "abs", "min", "sign", "concat", "getNumStr", "input", "num", "prefix", "totalTimezones", "length", "memoizedTimezones", "getAllCountries", "options", "arguments", "prev", "getCountry", "getAllTimezones", "getTimezone", "deliverTimezones", "memoizeCountry", "deliverCountry", "memoizeTimezone", "getCountriesForTimezone", "tzName", "values", "map", "getCountryForTimezone", "_getCountriesForTimez", "_getCountriesForTimez2", "_slicedToArray", "main", "getTimezonesForCountry", "countryId", "tzs", "_ref", "key", "_ref2", "other", "_objectWithoutProperties", "_excluded"]
}
